// <auto-generated />
using System;
using Backend.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(ConsultorioContext))]
    partial class ConsultorioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Service.Models.ContactoEmergencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("Relacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("ContactosEmergencia");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Eliminado = false,
                            Nombre = "Alba Russo",
                            PacienteId = 1,
                            Relacion = "Madre",
                            Telefono = "3498487726"
                        },
                        new
                        {
                            Id = 2,
                            Eliminado = false,
                            Nombre = "Julia Urriaga",
                            PacienteId = 2,
                            Relacion = "Madre",
                            Telefono = "3498193565"
                        },
                        new
                        {
                            Id = 3,
                            Eliminado = false,
                            Nombre = "Benjamín Ferro",
                            PacienteId = 3,
                            Relacion = "Padre",
                            Telefono = "349827446"
                        });
                });

            modelBuilder.Entity("Service.Models.Deuda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Cancelada")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("ProfesionalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ProfesionalId");

                    b.ToTable("Deudas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cancelada = false,
                            Descripcion = "Consulta inicial",
                            Eliminado = false,
                            Fecha = new DateTime(2025, 7, 22, 22, 23, 27, 5, DateTimeKind.Local).AddTicks(8404),
                            Monto = 10000m,
                            PacienteId = 1,
                            ProfesionalId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cancelada = true,
                            Descripcion = "Seguimiento",
                            Eliminado = false,
                            Fecha = new DateTime(2025, 7, 12, 22, 23, 27, 5, DateTimeKind.Local).AddTicks(8425),
                            Monto = 5000m,
                            PacienteId = 2,
                            ProfesionalId = 2
                        });
                });

            modelBuilder.Entity("Service.Models.EstadoTurno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EstadosTurno");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Eliminado = false,
                            Estado = "Reservado"
                        },
                        new
                        {
                            Id = 2,
                            Eliminado = false,
                            Estado = "Confirmado"
                        },
                        new
                        {
                            Id = 3,
                            Eliminado = false,
                            Estado = "Cancelado"
                        },
                        new
                        {
                            Id = 4,
                            Eliminado = false,
                            Estado = "Atendido"
                        },
                        new
                        {
                            Id = 5,
                            Eliminado = false,
                            Estado = "Ausente"
                        });
                });

            modelBuilder.Entity("Service.Models.ModalidadPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Modalidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ModalidadesPago");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Eliminado = false,
                            Modalidad = "Efectivo"
                        },
                        new
                        {
                            Id = 2,
                            Eliminado = false,
                            Modalidad = "Tarjeta de crédito"
                        },
                        new
                        {
                            Id = 3,
                            Eliminado = false,
                            Modalidad = "Tarjeta de débito"
                        },
                        new
                        {
                            Id = 4,
                            Eliminado = false,
                            Modalidad = "Transferencia"
                        });
                });

            modelBuilder.Entity("Service.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("EsParticular")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroAfiliado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ObraSocial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ProfesionalId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProfesionalId");

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "Italia 4787",
                            Dni = "37138426",
                            Eliminado = false,
                            Email = "abrilcosta@gmail.com",
                            EsParticular = false,
                            FechaNacimiento = new DateTime(1999, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Abril Costa",
                            NumeroAfiliado = "265488245",
                            ObraSocial = "Sancor Salud",
                            ProfesionalId = 1,
                            Telefono = "3498123456"
                        },
                        new
                        {
                            Id = 2,
                            Direccion = "Belgrano 2410",
                            Dni = "39420170",
                            Eliminado = false,
                            Email = "joaquinvargas@gmail.com",
                            EsParticular = true,
                            FechaNacimiento = new DateTime(1995, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Joaquín Vargas",
                            NumeroAfiliado = "",
                            ObraSocial = "Particular",
                            ProfesionalId = 1,
                            Telefono = "3498234567"
                        },
                        new
                        {
                            Id = 3,
                            Direccion = "25 de mayo 4254",
                            Dni = "39421170",
                            Eliminado = false,
                            Email = "emmaferro@gmail.com",
                            EsParticular = true,
                            FechaNacimiento = new DateTime(1995, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Emma Ferro",
                            NumeroAfiliado = "",
                            ObraSocial = "Particular",
                            ProfesionalId = 2,
                            Telefono = "3498232687"
                        });
                });

            modelBuilder.Entity("Service.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ModalidadPagoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("SesionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModalidadPagoId");

                    b.HasIndex("SesionId");

                    b.ToTable("Pagos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Eliminado = false,
                            Fecha = new DateTime(2025, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModalidadPagoId = 1,
                            Monto = 20000m,
                            SesionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Eliminado = false,
                            Fecha = new DateTime(2025, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModalidadPagoId = 2,
                            Monto = 22000m,
                            SesionId = 2
                        });
                });

            modelBuilder.Entity("Service.Models.Profesional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Profesionales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Eliminado = false,
                            Email = "webersantiago@gmail.com",
                            Especialidad = "Psicología",
                            Imagen = "",
                            Matricula = "4456",
                            Nombre = "Dr. Santiago Weber",
                            Telefono = "3498114782"
                        },
                        new
                        {
                            Id = 2,
                            Eliminado = false,
                            Email = "urriagavalentina@gmail.com",
                            Especialidad = "Psicología",
                            Imagen = "",
                            Matricula = "8015",
                            Nombre = "Dra. Valentina Urriaga",
                            Telefono = "3498114789"
                        });
                });

            modelBuilder.Entity("Service.Models.Sesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Honorarios")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Pagado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TurnoId");

                    b.ToTable("Sesiones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Eliminado = false,
                            Honorarios = 20000m,
                            Notas = "Paciente se presentó puntual. Refirió sentirse ansioso por situaciones laborales. Se trabajó en identificar factores desencadenantes. Buena predisposición al diálogo.",
                            Pagado = true,
                            TurnoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Eliminado = false,
                            Honorarios = 20000m,
                            Notas = "Paciente mencionó recuerdos de infancia que impactaron emocionalmente. Profundizar en vínculos afectivos en la próxima sesión.",
                            Pagado = true,
                            TurnoId = 2
                        });
                });

            modelBuilder.Entity("Service.Models.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanceladoPorProfesional")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("DuracionMinutos")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EstadoTurnoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MotivoCancelacion")
                        .HasColumnType("longtext");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfesionalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoTurnoId");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ProfesionalId");

                    b.ToTable("Turnos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanceladoPorProfesional = false,
                            DuracionMinutos = 60,
                            Eliminado = false,
                            EstadoTurnoId = 4,
                            FechaHora = new DateTime(2025, 5, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            PacienteId = 1,
                            ProfesionalId = 1
                        },
                        new
                        {
                            Id = 2,
                            CanceladoPorProfesional = false,
                            DuracionMinutos = 50,
                            Eliminado = false,
                            EstadoTurnoId = 4,
                            FechaHora = new DateTime(2025, 6, 16, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            PacienteId = 2,
                            ProfesionalId = 2
                        });
                });

            modelBuilder.Entity("Service.Models.ContactoEmergencia", b =>
                {
                    b.HasOne("Service.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Service.Models.Deuda", b =>
                {
                    b.HasOne("Service.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Profesional", "Profesional")
                        .WithMany()
                        .HasForeignKey("ProfesionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Profesional");
                });

            modelBuilder.Entity("Service.Models.Paciente", b =>
                {
                    b.HasOne("Service.Models.Profesional", "Profesional")
                        .WithMany("Pacientes")
                        .HasForeignKey("ProfesionalId");

                    b.Navigation("Profesional");
                });

            modelBuilder.Entity("Service.Models.Pago", b =>
                {
                    b.HasOne("Service.Models.ModalidadPago", "ModalidadPago")
                        .WithMany()
                        .HasForeignKey("ModalidadPagoId");

                    b.HasOne("Service.Models.Sesion", "Sesion")
                        .WithMany()
                        .HasForeignKey("SesionId");

                    b.Navigation("ModalidadPago");

                    b.Navigation("Sesion");
                });

            modelBuilder.Entity("Service.Models.Sesion", b =>
                {
                    b.HasOne("Service.Models.Turno", "Turno")
                        .WithMany()
                        .HasForeignKey("TurnoId");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("Service.Models.Turno", b =>
                {
                    b.HasOne("Service.Models.EstadoTurno", "EstadoTurno")
                        .WithMany("Turnos")
                        .HasForeignKey("EstadoTurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId");

                    b.HasOne("Service.Models.Profesional", "Profesional")
                        .WithMany()
                        .HasForeignKey("ProfesionalId");

                    b.Navigation("EstadoTurno");

                    b.Navigation("Paciente");

                    b.Navigation("Profesional");
                });

            modelBuilder.Entity("Service.Models.EstadoTurno", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Service.Models.Profesional", b =>
                {
                    b.Navigation("Pacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
